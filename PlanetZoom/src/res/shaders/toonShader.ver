#version 330	


layout (location = 0) in vec3 position; 
layout (location = 1) in vec2 uv; 
layout (location = 2) in vec3 normal;

out float intensity;
out vec3 normal;
out vec3 viewDir;
out vec4 vertexColor;
out vec2 uv;

uniform mat4 projectionMatrix;
uniform mat4 modelViewMatrix;
uniform mat4 normalMatrix;

vec4 lightPosition = vec4(-5.0, 3.0, 5.0, 1.0);

void main()
{
	normal = normalize(vec3(normalMatrix * vec4(gl_Normal, 1.0)));
	viewDir = vec3(modelViewMatrix * gl_Vertex);
	
	vec3 lightDir = normalize(vec3(lightPosition));
	intensity = dot(lightDir, normal);
	
	vertexColor = gl_Color;
	uv = gl_MultiTexCoord0.xy;
  
    gl_Position = projectionMatrix * modelViewMatrix * gl_Vertex; 
}
