#version 410 
#pragma debug(on)
#pragma optimize(off)

in DATA
{
	vec3 position;
	vec3 lightDir;
	vec3 normal;
	vec2 uv;
} pass_data;

uniform sampler2D s;
uniform float radius;

out vec4 out_Color;
 
void main(void)
{
	vec4 heightColor;
	vec4 shadeColor;
	float intensity;
	float height = length(pass_data.position) - radius;
	
	intensity = dot(normalize(pass_data.lightDir), normalize(pass_data.normal));
	
	if(height > 0.6)
	{
		heightColor = vec4(1.0, 1.0, 1.0, 1.0);
	}
	else if(height > 0.5)
	{
		heightColor = vec4(0.5, 0.5, 0.5, 1.0);
	}
	else if(height > 0.45)
	{
		heightColor = vec4(0.0, 0.8, 0.0, 1.0);
	}
	else if(height > 0.4)
	{
		heightColor = vec4(0.8, 0.8, 0.0, 1.0);
	}
	else
	{
		heightColor = vec4(0.0, 0.0, 0.8, 1.0);
	}
	
	if(intensity > 0.95)
	{
		shadeColor = vec4(0.5, 0.5, 0.5, 1.0);
	}
	else if(intensity > 0.5)
	{
		shadeColor = vec4(0.3, 0.3, 0.3, 1.0);
	}
	else if(intensity > 0.1)
	{
		shadeColor = vec4(0.1, 0.1, 0.1, 1.0);
	}
	else
	{
		shadeColor = vec4(0.0, 0.0, 0.0, 1.0);
	}
	
	out_Color = (shadeColor + heightColor) / 2.0;// + texture(s, pass_data.uv)) / 3.0;
	
}