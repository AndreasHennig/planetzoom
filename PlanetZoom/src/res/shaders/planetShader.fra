//https://www.opengl.org/sdk/docs/tutorials/ClockworkCoders/lighting.php

#version 330
#pragma debug(on)
#pragma optimize(off)

in DATA
{
	vec3 position;
	vec3 normal;
	vec2 uv;
	vec3 positionVector;
	vec3 viewDir;
	vec3 lightDir;
	float seaLevel;
} pass_data;

uniform float radius;

out vec4 out_Color;

void main(void)
{	
	vec4 heightColor;
	
	float height = length(pass_data.positionVector) - radius;
	float maxHeight = radius * 0.03;
	float heightGradientValue = height / maxHeight;
 
 	vec3 L = normalize(pass_data.lightDir - pass_data.position);   
	vec3 E = normalize(-pass_data.position);  
	vec3 R = normalize(-reflect(L,pass_data.normal));  
 
	float lightDiffuse = max(dot(pass_data.normal,L), 0.0);
   	lightDiffuse = clamp(lightDiffuse, 0.0, 1.0);     

 	float exponent = 4.0;
	float lightSpecular = 1.0 * pow(max(dot(R,E),0.0),exponent);
	lightSpecular = clamp(lightSpecular, 0.0, 1.0); 
	
	if(heightGradientValue > 0.94)
	{
		heightColor = vec4(0.87, 0.90, 0.89, 1.0);  //Snow
	}
	else if(heightGradientValue > 0.7) 
	{
		heightColor = vec4(0.6, 0.56, 0.39, 1.0);   //Stone
	}
	else if(heightGradientValue > 0.45) 
	{
		heightColor = vec4(0.22, 0.58, 0.28, 1.0);  //Grass
	}
	else if(heightGradientValue > pass_data.seaLevel)
	{
		heightColor = vec4(0.89, 0.78, 0.41, 1.0);  //Sand
	}
	else
	{
		heightColor = vec4(0.18 + lightSpecular, 0.42 + lightSpecular, 0.57 + lightSpecular, 1.0);  //Water
	}
	
	/*
	if(dot(pass_data.viewDir, pass_data.normal) < mix(0.5, 0.1, max(0.0, dot(pass_data.normal, pass_data.lightDir))))
	{
		out_Color = vec4(0.0, 0.0, 0.0, 1.0);
	}
	else
	{*/
		out_Color = heightColor;
		out_Color.xyz *= lightDiffuse;
	//}
}