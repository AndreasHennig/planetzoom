//https://www.opengl.org/sdk/docs/tutorials/ClockworkCoders/lighting.php
//http://stackoverflow.com/questions/4200224/random-noise-functions-for-glsl

#version 330
#pragma debug(on)
#pragma optimize(off)

in DATA
{
	vec3 position;
	vec3 normal;
	vec2 uv;
	vec3 positionVector;
	vec3 viewDir;
	vec3 lightDir;
	float mountainHeight;
} pass_data;

uniform float radius;

out vec4 out_Color;

void singleColor(float value)
{
	out_Color = vec4(value, value, value, 1.0);
}

void finalColor(vec4 color, float diffuse, float ambient, float specular)
{
	out_Color = color;
	out_Color.xyz *= (diffuse + ambient);
}

void main(void)
{	
 	vec3 L = normalize(pass_data.lightDir - pass_data.position);   
	vec3 E = normalize(-pass_data.position);  
	vec3 R = normalize(-reflect(L,pass_data.normal));  
	vec4 baseColor = vec4(0.5, 0.5, 0.5, 1.0);
 
 	float ambient = 0.08;
	float diffuse = max(dot(pass_data.normal,L), 0.0);
   	diffuse = clamp(diffuse, 0.0, 1.0);     

 	float exponent = 2.0;
	float specular = 1.0 * pow(max(dot(R,E),0.0),exponent);
	specular = clamp(specular, 0.0, 1.0); 
	
	finalColor(baseColor, diffuse, ambient, specular);
	
	
}