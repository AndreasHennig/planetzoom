#version 330 
#pragma debug(on)
#pragma optimize(off)

uniform mat4 modelViewMatrix;
uniform mat4 projectionMatrix;
uniform vec3 cameraPosition;
uniform vec3 lightPosition;

layout (location = 0) in vec3 position;
layout (location = 1) in vec2 uvCoords;
layout (location = 2) in vec3 normal;
layout (location = 3) in vec4 color;

out DATA
{
	vec3 viewDir;
	vec3 position;
	vec3 lightDir;
	vec3 normal;
	vec2 uv;
} pass_data;

void main(void)
{
	pass_data.viewDir = position - cameraPosition;
	pass_data.uv = uvCoords;
	pass_data.normal = normal;
	pass_data.position = position;
	pass_data.lightDir = normalize(lightPosition);

	gl_Position = (projectionMatrix * modelViewMatrix) * vec4(position, 1.0);
}
